name: uhelp_deb_pack

on:
  push:
    branches:
      - main

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}


       # Setup Python
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified


      - name: create deb package build directory
        run: |
          mkdir compile
          mkdir -p autodeb/uhelp${{ env.RELEASE_VERSION }}/

      - name: Copy Necessary items from repository
        run: |
          cp -a ./devdeb/* autodeb/uhelp*/
          cp -p uhelp/uhelp.py compile/

      - name: change section pathstyle in uhelp.py to deb
        run: sed -i -n -E 's/(pathtype[[:blank:]]*=[[:blank:]]*).*/\1"deb"/' ./compile/uhelp.py


      # Build python script into a stand-alone binary file
      - uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: ./compile/uhelp.py
          onefile: true

      # identify the architecture of binary file
      - name: identify the architecture of binary file
        run: |
          sudo apt update && sudo apt install file
          file ./build/uhelp.bin

      - name: Move the binary file to the deb package build directory
        run: |
          cd build/
          mv uhelp.bin uh
          cd ..
          mv ./build/uh ./autodeb/uhelp*/opt/uhelp/

      # --root-owner-group is Instead fakeroot
      - name: dpkg deb  build
        run: dpkg-deb --root-owner-group --build autodeb/uhelp*/ .

      - name: install uhelp and check directory
        run: |
          sudo apt install ./uh*.deb && ls /opt/uhelp
          echo "________________________________________"
          whereis uh

      - name: checklist1
        run: |
          uhelp ls && uh ls > uhout.txt

      - name: checklist2
        run: |
          echo y | uhelp -s sleep time
          sleep 0.5
          echo y | uhelp -s i am sleep
          sleep 0.5
          echo y | uhelp -s good night
          sleep 0.5
          echo y | uhelp -s hello world
          sleep 0.5
          echo y | uhelp -s sleep time again
          sleep 0.5
          echo y | uhelp -s good night again
          sleep 0.5
          echo y | uhelp -s hello
          sleep 0.5
          echo y | uhelp -s sleep
          sleep 0.5
          echo y | uhelp -s good night!
          sleep 0.5
          echo y | uhelp -s morning!
          sleep 0.5
          echo y | uhelp -s sleep note test
          sleep 0.5
          echo y | uhelp -s hello world!
          sleep 0.5
          echo n | uhelp -s i am check > sleep.txt
          sleep 0.5


      - name: checklist3
        run: |
          uh -v retro2
          sleep 0.5
          uh uhelp > retro2.txt


      - name: backup
        run: |
          echo y | uh -b backup > bk.txt
          ls ~/


      - name: tldr test
        run: uh -t grep > gr.txt


      - name: tar.gz outputs
        run: tar cvzf testtxt.tar.gz gr.txt retro2.txt sleep.txt uhout.txt


      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: uhelp-artifact
          path: uh*.deb testtxt.tar.gz

